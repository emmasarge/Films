{"version":3,"sources":["FilmList.js","FilmTop.js","SearchBar.js","SaveFaves.js","RemoveFaves.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["FilmList","props","FaveComponent","faveComponent","movies","map","movie","index","className","alt","src","Poster","Title","Year","onClick","handleFavesClick","FilmTop","heading","SearchBar","value","onChange","event","setSearchInput","target","placeholder","SaveFaves","xmlns","width","height","fill","class","viewBox","d","RemoveFaves","Modal","trigger","setTrigger","children","App","useState","setMovies","searchInput","faves","setFaves","modalPop","setModalPop","useEffect","setTimeout","fetchFilms","a","url","fetch","response","json","responseJson","Search","movieFaves","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","saveFaveList","filter","fave","imdbID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA8BeA,EA5BE,SAACC,GAClB,IAAMC,EAAgBD,EAAME,cAE3B,OACC,mCACEF,EAAMG,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAEjB,sBAAKC,UAAU,6EAAf,UACC,qBAAKA,UAAU,oBAAf,SACe,qBAAKA,UAAU,oBAAoBC,IAAI,eAAcC,IAAKJ,EAAMK,WAChE,sBAAKH,UAAU,qDAAf,UACI,6BAAKF,EAAMM,QACX,4BAAIN,EAAMO,OAGd,qBACdC,QAAS,kBAAMb,EAAMc,iBAAiBT,IAAOE,UAAU,2DADzC,SAGI,qBAAKA,UAAU,iBAAf,SAClB,cAACN,EAAD,QATc,iBCDLc,EATC,SAACf,GACb,OACI,qBAAKO,UAAU,aAAf,SACI,6BAAKP,EAAMgB,aCORC,EAVG,SAACjB,GACf,OACI,qBAAKO,UAAU,eAAf,SACI,uBAAOA,UAAU,yBAAyBW,MAAOlB,EAAMkB,MACvDC,SAAU,SAACC,GAAD,OAAUpB,EAAMqB,eAAeD,EAAME,OAAOJ,QAAQK,YAAY,4BCOvEC,EAXG,WACd,OACI,mCACA,uBAAMjB,UAAU,kCAAhB,UAAkD,kDAC9C,qBAAKA,UAAU,OAAOkB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,kBAAkBC,QAAQ,YAApI,SACJ,sBAAMC,EAAE,iQAF0C,OAAlD,WCUOC,EAbK,WAChB,OAEI,qCACA,sBAAMzB,UAAU,OAAhB,yCACA,qBAAKkB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,aAAaC,QAAQ,YAA9G,SACN,sBAAMC,EAAE,sfCUKE,MAbf,SAAejC,GACX,OAAOA,EAAMkC,QACT,mCACA,qBAAK3B,UAAU,QAAf,SACA,sBAAKA,UAAU,aAAf,UACI,wBAAQA,UAAU,YAAWM,QAAS,kBAAKb,EAAMmC,YAAW,IAA5D,mBACEnC,EAAMoC,gBAIb,ICuGQC,EA1GH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACPnC,EADO,KACCoC,EADD,OAEuBD,mBAAS,IAFhC,mBAEPE,EAFO,KAEMnB,EAFN,OAGUiB,mBAAS,IAHnB,mBAGPG,EAHO,KAGAC,EAHA,OAIgBJ,oBAAS,GAJzB,mBAIPK,EAJO,KAIGC,EAJH,KASdC,qBAAU,WACNC,YAAW,WACXF,GAAY,KACT,OACL,IAGE,IAAMG,EAAU,uCAAG,WAAOP,GAAP,mBAAAQ,EAAA,6DACbC,EADa,qCACuBT,EADvB,4BAGIU,MAAMD,GAHV,cAGbE,EAHa,gBAIQA,EAASC,OAJjB,QAIbC,EAJa,QAMFC,QACbf,EAAUc,EAAaC,QAPR,2CAAH,sDAWpBT,qBAAU,WACNE,EAAWP,KACZ,CAACA,IAENK,qBAAU,WACV,IAAMU,EAAYC,KAAKC,MACtBC,aAAaC,QAAQ,kBAGlBJ,GACHb,EAASa,KAER,IAIA,IAAMK,EAAqB,SAACC,GAC9BH,aAAaI,QAAQ,gBAAiBN,KAAKO,UAAUF,KAmBnD,OAEJ,cADQ,CACR,OAAKtD,UAAU,0BAAf,UACQ,qBAAKA,UAAU,MAAf,SAEI,eAAC,EAAD,CAAO2B,QAASS,EAAUR,WAAYS,EAAtC,UACI,qDACA,yEACA,wEAA0C,uBAA1C,kCAEA,yEAIT,sBAAKrC,UAAU,0CAAf,UACI,qBAAKC,IAAI,wBAAwBC,IAAI,kBAAkBF,UAAU,SACjE,cAAC,EAAD,CAASS,QAAQ,aAEjB,cAAC,EAAD,CAAWwB,YAAaA,EAAanB,eAAgBA,OAGxD,qBAAKd,UAAU,gBAAf,SACQ,cAAC,EAAD,CACIJ,OAAQA,EACRW,iBAxCK,SAACT,GAClB,IAAM2D,EAAY,sBAAOvB,GAAP,CAAcpC,IAChCqC,EAASsB,GACTJ,EAAmBI,IAsCP9D,cAAesB,MAGvB,qBAAKjB,UAAU,oDAAf,SACI,cAAC,EAAD,CAASS,QAAQ,4BAGnB,qBAAKT,UAAU,gBAAf,SACE,cAAC,EAAD,CACIJ,OAAQsC,EACR3B,iBA7CI,SAACT,GACjB,IAAM2D,EAAevB,EAAMwB,QACvB,SAACC,GAAD,OAAUA,EAAKC,SAAW9D,EAAM8D,UAEnCzB,EAASsB,GACTJ,EAAmBI,IAyCR9D,cAAe8B,UCnGpBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.daea1cd4.chunk.js","sourcesContent":["import React from 'react';\n\nconst FilmList = (props) => {\nconst FaveComponent = props.faveComponent;\n// Displays Film information from the API\n\treturn (\n\t\t<>\n\t\t\t{props.movies.map((movie, index) => (\n          \n\t\t\t\t<div className='image-container container-fluid mb-4 d-flex row justify-content-center m-3'>\n\t\t\t\t\t<div className='col col-sm-6 mt-4'>\n                    <img className='poster img-center' alt='movie poster'src={movie.Poster}></img></div>\n                    <div className='movie-info text-wrap col col-sm-6 mt-4 text-center'>\n                        <h3>{movie.Title}</h3>\n                        <p>{movie.Year}</p>\n\n                  \n                    <div\n\t\t\t\t\t\tonClick={() => props.handleFavesClick(movie)}className='overlay d-flex align-items-center justify-content-center'\n\t\t\t\t\t>\n                        <div className=\"fave-component\" >\n\t\t\t\t\t\t<FaveComponent />\n\t\t\t\t\t    </div>\n                    </div>  </div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default FilmList;","import React from 'react';\n// Headers for FilmBase and Favourite films\nconst FilmTop = (props) => {\n    return (\n        <div className='col header'>\n            <h1>{props.heading}</h1>\n\n        </div>\n    )\n};\n\nexport default FilmTop;","import React from 'react';\n// Search input to retrieve films from API\nconst SearchBar = (props) => {\n    return(\n        <div className='col col-sm-6'>\n            <input className='form-control searchbar' value={props.value}\n            onChange={(event)=> props.setSearchInput(event.target.value)} placeholder='Search for a film...'></input>\n\n        </div>\n    )\n};\n\nexport default SearchBar;","import React from 'react';\n// Save films to favourites \nconst SaveFaves = () => {\n    return (\n        <>\n        <span className=\"fave-click mr-2 text-right mb-4\"><p>Save as favourite\n            <svg className=\"star\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n        </svg> </p>  </span> \n        </>\n    );\n};\n\nexport default SaveFaves;\n","import React from 'react';\n\nconst RemoveFaves = () => {\n    return(\n\n        <>\n        <span className='mr-4'>Remove from your favourites</span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n  <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\n</svg>\n\n</>\n    );\n};\n\nexport default RemoveFaves","import React from 'react';\nimport './App.css'\n\n// Modal to pop up with instructions of how site works in 2 seconds of loading page\n\nfunction Modal(props){\n    return(props.trigger) ? (\n        <>\n        <div className=\"modal\">\n        <div className='innerModal'>\n            <button className=\"close-btn\"onClick={()=> props.setTrigger(false)}>close</button>\n            { props.children } \n            </div>\n        </div>\n        </>\n    ): \"\";\n};\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport FilmList from './FilmList';\nimport FilmTop from './FilmTop';\nimport SearchBar from './SearchBar';\nimport SaveFaves from './SaveFaves';\nimport RemoveFaves from './RemoveFaves';\nimport Modal from './Modal';\n\n\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchInput, setSearchInput]= useState('');\n    const [faves, setFaves]=useState([]);\n    const [modalPop, setModalPop]=useState(false);\n\n\n    // Set short timed Onload Modal for instructions for user\n    \n    useEffect(()=> {\n        setTimeout(() => {\n        setModalPop(true);\n        }, 2000);\n    },[]);\n  \n    // Fetch films from API\n        const fetchFilms = async (searchInput) => {\n        const url = `https://www.omdbapi.com/?s=${searchInput}&apikey=9431dc8`;\n\n        const response = await fetch(url);\n        const responseJson = await response.json();\n\n        if (responseJson.Search) {\n            setMovies(responseJson.Search);\n        }\n    };\n\n    useEffect(() => {\n        fetchFilms(searchInput);\n    }, [searchInput]);\n\n  useEffect(() => {\n\t\tconst movieFaves= JSON.parse(\n\t\t\tlocalStorage.getItem('react-moviedb')\n\t\t);\n\n\t\tif (movieFaves) {\n\t\t\tsetFaves(movieFaves);\n\t\t}\n\t}, []);\n    \n    // Save favourite films for when page reloads\n    \n    const saveToLocalStorage = (items) => {\n\t\tlocalStorage.setItem('react-moviedb', JSON.stringify(items));\n\t};\n\n    const saveFaveFilm = (movie)=> {\n        const saveFaveList = [...faves, movie];\n        setFaves(saveFaveList)\n        saveToLocalStorage(saveFaveList)\n    }\n\n    const removeFaves = (movie)=> {\n        const saveFaveList = faves.filter(\n            (fave) => fave.imdbID !== movie.imdbID\n        );\n         setFaves(saveFaveList);\n         saveToLocalStorage(saveFaveList);\n    };\n\n    \n\n    return (\n        // Display of components user will see, Modal, SaveFilms, FilmList:\n<div className='container-fluid moviedb'>\n        <div className=\"App\">\n            \n            <Modal trigger={modalPop} setTrigger={setModalPop}>\n                <h3>Welcome to FilmBase</h3>\n                <p>Find your favourite films and save them.</p>\n                <p>Type in a film title in the search bar <br/>\n                Click on 'Save as Favourite'</p>\n                <p>Voila! Your top films will be saved</p>\n            </Modal>\n        </div>\n    \n       <div className='row d-flex align-items-center mt-4 mb-4'>\n           <img alt=\"film logo with camera\" src=\"./filmlogo1.png\" className='logo'></img>\n           <FilmTop heading='FilmBase' />\n          \n           <SearchBar searchInput={searchInput} setSearchInput={setSearchInput} /> \n       </div>\n\n        <div className='row movie-row'>\n                <FilmList\n                    movies={movies}\n                    handleFavesClick={saveFaveFilm}\n                    faveComponent={SaveFaves}\n                />\n            </div>\n            <div className='row d-flex align-items-center fave-film mt-4 mb-4'>\n                <FilmTop heading='Your favourite films:'/>\n                \n            </div>\n              <div className='row movie-row'>\n                <FilmList\n                    movies={faves}\n                    handleFavesClick={removeFaves}\n                    faveComponent={RemoveFaves}\n                />\n            </div>\n    </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}